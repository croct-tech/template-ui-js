name: Release

on:
  release:
    types:
      - published

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: 'https://npm.pkg.github.com'

      - name: Cache dependencies
        id: cache-dependencies
        uses: actions/cache@v4
        with:
          path: node_modules
          key: node_modules-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: |-
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GH_PACKAGES_TOKEN }}" >> ~/.npmrc
          npm ci
          rm -rf ~/.npmrc

      - name: Build package
        run: |-
          npm run build

      - name: Prepare release
        run: |-
          cp package.json LICENSE README.md build/
          cd build
          sed -i -e "s~\"version\": \"0.0.0-dev\"~\"version\": \"${GITHUB_REF##*/}\"~" package.json

      - name: Publish pre-release to NPM
        if: ${{ github.event.release.prerelease }}
        run: |-
          cd build
          npm publish --tag next
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish release to NPM
        if: ${{ !github.event.release.prerelease }}
        run: |-
          cd build
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Bundle package
        if: ${{ !github.event.release.prerelease }}
        run: |-
          rm -rf build
          npm run build-web-component

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        if: ${{ !github.event.release.prerelease }}
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: '${{ secrets.GCLOUD_WORKLOAD_IDENTITY }}'
          service_account: '${{ secrets.GCLOUD_SERVICE_ACCOUNT }}'

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Deploy to GCS
        if: ${{ !github.event.release.prerelease }}
        env:
          GCLOUD_BUCKET: ${{ secrets.GCLOUD_BUCKET }}
        run: |-
          gsutil -m cp build/template-ui.mjs "gs://${GCLOUD_BUCKET}/js/template-ui@$(echo ${GITHUB_REF} | cut -d. -f1).mjs"
          gsutil -m setmeta -h "Cache-Control: public, max-age=3600" "gs://${GCLOUD_BUCKET}/js/template-ui@$(echo ${GITHUB_REF} | cut -d. -f1).mjs"
