name: Preview deploy

on:
  push:
    branches:
      - master

env:
  GCLOUD_PROJECT_DEV: "croct-dev"

jobs:
  deploy-preview:
    permissions:
      id-token: write
      contents: read
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - uses: rlespinasse/github-slug-action@v4
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          registry-url: https://registry.npmjs.org
          node-version: 23
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Install dependencies
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: npm ci

      - id: auth
        name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: "${{ secrets.GCLOUD_WORKLOAD_IDENTITY }}"
          service_account: "${{ secrets.GCLOUD_SERVICE_ACCOUNT }}"

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Enable components
        run: |-
          gcloud auth configure-docker
          gcloud --quiet components install beta

      - name: Build & Publish
        run: |
          sed -i -e "s~http://localhost:6008~https://template-ui.croct.dev/_web~" .storybook/react/main.ts
          npm run build-storybook -- --quiet --config-dir .storybook/react --output-dir storybook-static
          npm run build-storybook -- --quiet --config-dir .storybook/web --output-dir storybook-static/_web

          docker buildx build ./storybook-static \
            --file ./Dockerfile \
            --tag gcr.io/${{ env.GCLOUD_PROJECT_DEV }}/template-ui \
            --push

      - name: Deploy
        run: |-
          IMAGE_TAG=gcr.io/${{ env.GCLOUD_PROJECT_DEV }}/template-ui

          IMAGE_DIGEST=$(gcloud container images describe $IMAGE_TAG --format=json | jq -r '.image_summary.fully_qualified_digest')

          gcloud --project ${{ env.GCLOUD_PROJECT_DEV }} --quiet \
            beta run deploy template-ui \
            --platform=managed \
            --region=us-central1 \
            "--image=$IMAGE_DIGEST" \
            --allow-unauthenticated \
            --no-traffic \
            --tag master

          gcloud --project ${{ env.GCLOUD_PROJECT_DEV }} --quiet \
            beta run services update-traffic template-ui \
            --region=us-central1 \
            --to-tags=master=100
